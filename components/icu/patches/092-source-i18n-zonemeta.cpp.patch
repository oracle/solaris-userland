Add NULL checks for TimeZone::createTimeZoneIDEnumeration calls
http://bugs.icu-project.org/trac/ticket/12377
--- icu4c-77_1/icu/source/i18n/dtfmtsym.cpp
+++ icu4c-77_1/icu/source/i18n/dtfmtsym.cpp
@@ -1304,6 +1304,10 @@ static const int32_t NUM_TYPES = 4;
     do { // dummy do-while
 
         tzids = TimeZone::createTimeZoneIDEnumeration(ZONE_SET, nullptr, nullptr, status);
+        if (tzids == nullptr) {
+            status = U_MEMORY_ALLOCATION_ERROR;
+            break;
+        }
         rows = tzids->count(status);
         if (U_FAILURE(status)) {
             break;
--- icu4c-77_1/icu/source/i18n/zonemeta.cpp
+++ icu4c-77_1/icu/source/i18n/zonemeta.cpp
@@ -486,12 +486,14 @@ U_ASSERT(u_strlen(region) == 2);
             u_UCharsToChars(region, regionBuf, 2);
 
             StringEnumeration *ids = TimeZone::createTimeZoneIDEnumeration(UCAL_ZONE_TYPE_CANONICAL_LOCATION, regionBuf, nullptr, status);
-            int32_t idsLen = ids->count(status);
-            if (U_SUCCESS(status) && idsLen == 1) {
-                // only the single zone is available for the region
-                singleZone = true;
+            if (ids != nullptr) {
+                int32_t idsLen = ids->count(status);
+                if (U_SUCCESS(status) && idsLen == 1) {
+                    // only the single zone is available for the region
+                    singleZone = true;
+                }
+                delete ids;
             }
-            delete ids;
 
             // Cache the result
             umtx_lock(&gZoneMetaLock);
