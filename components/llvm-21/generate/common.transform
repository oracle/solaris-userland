#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2020, 2025, Oracle and/or its affiliates.
#

# These are normally in transforms/manifest-check-cleanup which we don't use
# because of *.a libraries.
<transform dir -> drop>
<transform file path=.*\.pyc$ -> drop>
<transform file link path=mangled/.* -> edit path ^mangled/ "">

# Use LLVM version variable
<transform file link path=usr/llvm/21.* -> edit path llvm/21 llvm/\$\(LLVM_VERSION\)>

# Use PYVER for default Python version
<transform file path=.+3\.11.* -> edit path 3\\.11 \$\(PYVER\)>

# by default everything is llvm-build package
<transform file link hardlink -> default pkg.type build-llvm>

<transform file path=usr/llvm/\$\(LLVM_VERSION\)/include/clang -> set pkg.type build-clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/lib/.*cmake/clang -> set pkg.type build-clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/lib/.*libclang.*\.a$ -> set pkg.type build-clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/lib/(analyze-c\+\+|analyze-cc|c\+\+-analyzer|ccc-analyzer|intercept-c\+\+|intercept-cc) -> set pkg.type build-clang>

<transform file link path=usr/llvm/\$\(LLVM_VERSION\)/(bin|share/man/man1)/ -> set pkg.type llvm>
<transform file link path=usr/llvm/\$\(LLVM_VERSION\)/lib/.*(libLLVM|libLTO).*\.so -> set pkg.type libs-llvm>

<transform file link path=usr/llvm/\$\(LLVM_VERSION\)/(bin|share/man/man1).*/(arcmt-test|c-|clang|scan|diagtool|git-clang-format|hmaptool) -> set pkg.type clang>
<transform file link path=usr/llvm/\$\(LLVM_VERSION\)/(bin|share/man/man1)/(analyze-build|intercept-build) -> set pkg.type clang>
<transform file link path=usr/llvm/\$\(LLVM_VERSION\)/lib/.*libclang.*\.so -> set pkg.type libs-clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/lib/.*/clang/.*/include -> set pkg.type clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/lib/clang -> set pkg.type clang>
<transform file path=usr/lib/python\$\(PYVER\)/vendor-packages -> set pkg.type clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/lib/libear -> set pkg.type clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/lib/libscanbuild -> set pkg.type clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/share/clang -> set pkg.type clang>
<transform file path=usr/llvm/\$\(LLVM_VERSION\)/share/scan -> set pkg.type clang>
