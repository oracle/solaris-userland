pyfakefs is not available on Solaris; tests using it are skipped.

Pkg is a package on Solaris, making the test fail.

jaraco.test is not available on Solaris, hence the reimplementation
of similar functionality.

Not intended for upstream.

--- importlib_metadata-8.7.0/tests/test_main.py
+++ importlib_metadata-8.7.0/tests/test_main.py
@@ -3,8 +3,6 @@ import pickle
 import re
 import unittest
 
-import pyfakefs.fake_filesystem_unittest as ffs
-
 import importlib_metadata
 from importlib_metadata import (
     Distribution,
@@ -272,7 +270,8 @@ class MissingSysPath(fixtures.OnSysPath,
         importlib_metadata.distributions()
 
 
-class InaccessibleSysPath(fixtures.OnSysPath, ffs.TestCase):
+@unittest.skip("pyfakefs is not available on Solaris")
+class InaccessibleSysPath(fixtures.OnSysPath):
     site_dir = '/access-denied'
 
     def setUp(self):
--- importlib_metadata-8.7.0/tests/test_api.py
+++ importlib_metadata-8.7.0/tests/test_api.py
@@ -51,7 +51,7 @@ class APITests(
                 assert distribution(name).metadata['Name'] == 'pkg.dot'
 
     def test_prefix_not_matched(self):
-        prefixes = 'p', 'pkg', 'pkg.'
+        prefixes = 'p', 'pkg.'
         for prefix in prefixes:
             with self.subTest(prefix):
                 with self.assertRaises(PackageNotFoundError):
--- importlib_metadata-8.7.0/tests/compat/py39.py
+++ importlib_metadata-8.7.0/tests/compat/py39.py
@@ -1,8 +1,23 @@
-from jaraco.test.cpython import from_test_support, try_import
+import test.support
+import types
 
-os_helper = try_import('os_helper') or from_test_support(
-    'FS_NONASCII', 'skip_unless_symlink', 'temp_dir'
-)
-import_helper = try_import('import_helper') or from_test_support(
-    'modules_setup', 'modules_cleanup'
-)
+try:
+    from test.support import os_helper
+except ImportError:
+    os_helper = types.SimpleNamespace(
+        **{
+            "FS_NONASCII": test.support.FS_NONASCII,
+            "skip_unless_symlink": test.support.skip_unless_symlink,
+            "temp_dir": test.support.temp_dir,
+        }
+    )
+
+try:
+    from test.support import import_helper
+except ImportError:
+    import_helper = types.SimpleNamespace(
+        **{
+            "modules_setup": test.support.modules_setup,
+            "modules_cleanup": test.support.modules_cleanup,
+        }
+    )
