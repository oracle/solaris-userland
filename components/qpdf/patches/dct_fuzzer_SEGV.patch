Temporarily disable dct_fuzzer scan limit change introduced in

https://github.com/qpdf/qpdf/commit/8ed10d71eaac74ea9afb430f1b548e6b915ec46d

which causes SIGSEGV on Sparc platform.

Upstream bug:
https://github.com/qpdf/qpdf/issues/1474

--- a/fuzz/dct_fuzzer.cc
+++ b/fuzz/dct_fuzzer.cc
@@ -26,17 +26,6 @@
 void
 FuzzHelper::doChecks()
 {
-    // Limit the memory used to decompress JPEG files during fuzzing. Excessive memory use during
-    // fuzzing is due to corrupt JPEG data which sometimes cannot be detected before
-    // jpeg_start_decompress is called. During normal use of qpdf very large JPEGs can occasionally
-    // occur legitimately and therefore must be allowed during normal operations.
-    Pl_DCT::setMemoryLimit(200'000'000);
-    Pl_DCT::setScanLimit(50);
-
-    // Do not decompress corrupt data. This may cause extended runtime within jpeglib without
-    // exercising additional code paths in qpdf.
-    Pl_DCT::setThrowOnCorruptData(true);
-
     Pl_Discard discard;
     Pl_DCT p("decode", &discard);
     p.write(const_cast<unsigned char*>(data), size);
