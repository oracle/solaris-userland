Fix following error message:

$ /usr/gcc/9/bin/go build main.go
# command-line-arguments
ar: bad option: -D
usage:
    ar -d [-SvV] archive [file...]
    ar -m [-SvV] [-{a|b|i} posname] archive [file...]
    ar -p [-sSvV] archive [file ...]
    ar -q [-cSvV] archive [file...]
    ar -r [-cSuvV] [-{a|b|i} posname] archive [file...]
    ar -t [-sSvV] archive [file...]
    ar -x [-CsSTvV] archive [file...]
    ar [-sSvV] archive

The error is harmless, no functionality issue, GCCGO runs Solaris "ar" which
doesn't know -D option, after failure, GCCGO runs it again without -D.

--- gcc-14.1.0/libgo/go/cmd/go/internal/work/gccgo.go
+++ gcc-14.1.0/libgo/go/cmd/go/internal/work/gccgo.go
@@ -46,7 +46,7 @@ return GccgoBin
 }
 
 func (gccgoToolchain) ar() []string {
-	return envList("AR", "ar")
+	return envList("AR", "/usr/gnu/bin/ar")
 }
 
 func checkGccgoBin() {
--- gcc-14.1.0/libgo/go/go/internal/gccgoimporter/importer_test.go
+++ gcc-14.1.0/libgo/go/go/internal/gccgoimporter/importer_test.go
@@ -180,7 +180,7 @@ }
 
 		runImporterTest(t, imp, initmap, &test)
 
-		cmd = exec.Command("ar", "cr", afile, ofile)
+		cmd = exec.Command("/usr/gnu/bin/ar", "cr", afile, ofile)
 		out, err = cmd.CombinedOutput()
 		if err != nil {
 			t.Logf("%s", out)
