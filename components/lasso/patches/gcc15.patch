From ef24e43f473868800de87404481e92fbb2889a61 Mon Sep 17 00:00:00 2001
From: Yann Weber <yweber@entrouvert.com>
Date: Mon, 27 Jan 2025 12:24:50 +0100
Subject: [PATCH] bindings: fix lasso_provider_get_key_encryption_method export
 (#101250)

---
 bindings/python/tests/binding_tests.py  | 6 ++++++
 bindings/python/tests/profiles_tests.py | 6 ++++++
 lasso/id-ff/provider.h                  | 2 +-
 3 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/bindings/python/tests/binding_tests.py b/bindings/python/tests/binding_tests.py
index 77b64689..f46b67a0 100755
--- a/bindings/python/tests/binding_tests.py
+++ b/bindings/python/tests/binding_tests.py
@@ -339,6 +339,12 @@ class BindingTestCase(unittest.TestCase):
         self.assertEqual(str(cm.exception),
                          '<lasso.XmlSchemaInvalidFragmentError(17): An XML tree does not respect at least an XML schema of its namespaces.>')
 
+    def test_provider_get_key_encryption_method(self):
+        # check getKeyEncryptionMethod is a Provider method #101250
+        with self.assertRaises(AttributeError):
+            getattr(lasso, 'providerGetKeyEncryptionMethod')
+        getattr(lasso.Provider, 'getKeyEncryptionMethod')
+
     def test_set_list_of_strings(self):
         node = lasso.Samlp2RequestedAuthnContext()
         with self.assertRaises(TypeError, msg='value should be a tuple of strings'):
diff --git a/bindings/python/tests/profiles_tests.py b/bindings/python/tests/profiles_tests.py
index 2b1b7dcf..8679d663 100755
--- a/bindings/python/tests/profiles_tests.py
+++ b/bindings/python/tests/profiles_tests.py
@@ -330,6 +330,12 @@ class LoginTestCase(unittest.TestCase):
             sp_login.setSignatureVerifyHint(lasso.PROFILE_SIGNATURE_VERIFY_HINT_FORCE)
             sp_login.processAuthnResponseMsg(idp_login.msgBody)
             sp_login.acceptSso()
+
+            if key_encryption_method:
+                expected_key_encryption_method = key_encryption_method
+            else:
+                expected_key_encryption_method = lasso.getDefaultKeyEncryptionMethod()
+            assert provider.getKeyEncryptionMethod() == expected_key_encryption_method
             return sp_login.response.debug()
 
         os.environ['LASSO_DEFAULT_KEY_ENCRYPTION_METHOD'] = 'rsa-pkcs1'
diff --git a/lasso/id-ff/provider.h b/lasso/id-ff/provider.h
index 4a2a77fd..1780479f 100644
--- a/lasso/id-ff/provider.h
+++ b/lasso/id-ff/provider.h
@@ -286,7 +286,7 @@ LASSO_EXPORT int lasso_provider_verify_signature(LassoProvider *provider,
 LASSO_EXPORT void lasso_provider_set_key_encryption_method(
 		LassoProvider *provider, LassoKeyEncryptionMethod method);
 
-LASSO_EXPORT LassoKeyEncryptionMethod lasso_provider_get_key_encryption_method();
+LASSO_EXPORT LassoKeyEncryptionMethod lasso_provider_get_key_encryption_method(const LassoProvider* provider);
 
 #ifdef __cplusplus
 }
