#
# Modify ssh-rsa in configurations files to rsa-sha2-256
# This should be temporary and should be removed later on and so it is not
# part of the FIPS patch.
#
--- old/readconf.c	2025-10-10 11:53:51.322206760 +0200
+++ new/readconf.c	2025-10-10 11:53:52.357323145 +0200
@@ -1750,6 +1750,22 @@ parse_pubkey_algos:
 			    filename, linenum, arg ? arg : "<NONE>");
 			goto out;
 		}
+#ifdef ENABLE_OPENSSL_FIPS
+		char *new;
+		if (*arg != '-' && sshkey_convert_ssh_rsa(arg, &new)) {
+			if (new == NULL) {
+				error("%s line %d: Cannot convert '%s' "
+				    "to rsa-sha2-256.",
+				    filename, linenum, arg);
+				goto out;
+			}
+			error("%s line %d: FIPS not allowed ssh-rsa "
+			    "replaced with rsa-sha2-256.",
+			    filename, linenum);
+			if (*activep && *charptr == NULL)
+				*charptr = new;
+		} else
+#endif
 		if (*activep && *charptr == NULL)
 			*charptr = xstrdup(arg);
 		break;
--- old/servconf.c	2025-10-10 11:53:52.046943355 +0200
+++ new/servconf.c	2025-10-10 11:53:52.358323300 +0200
@@ -1708,6 +1708,21 @@ process_server_config_line_depth(ServerO
 		    arg + 1 : arg, 1, ca_only))
 			fatal("%s line %d: Bad key types '%s'.",
 			    filename, linenum, arg ? arg : "<NONE>");
+#ifdef ENABLE_OPENSSL_FIPS
+		char *new;
+		if (*arg != '-' && sshkey_convert_ssh_rsa(arg, &new)) {
+			if (new == NULL)
+				fatal("%s line %d: Cannot convert '%s' "
+				    "to rsa-sha2-256.",
+				    filename, linenum, arg);
+
+			error("%s line %d: FIPS not allowed ssh-rsa "
+			    "replaced with rsa-sha2-256.",
+			    filename, linenum);
+			if (*activep && *charptr == NULL)
+				*charptr = new;
+		} else
+#endif
 		if (*activep && *charptr == NULL)
 			*charptr = xstrdup(arg);
 		break;
--- old/sshkey.c	2025-10-10 11:53:52.204265040 +0200
+++ new/sshkey.c	2025-10-10 11:54:21.011716610 +0200
@@ -143,6 +143,7 @@ const struct sshkey_impl * const keyimpl
 	&sshkey_ecdsa_sk_cert_impl,
 	&sshkey_ecdsa_sk_webauthn_impl,
 # endif /* OPENSSL_HAS_ECC */
+	&sshkey_rsa_impl,		/* Filtered in sshkey_alg_list() */
 	&sshkey_rsa_sha256_impl,
 	&sshkey_rsa_sha256_cert_impl,
 	&sshkey_rsa_sha512_impl,
@@ -349,11 +350,18 @@ sshkey_alg_list(int certs_only, int plai
 	size_t i;
 	const struct sshkey_impl *impl;
 	char sep_str[2] = {sep, '\0'};
+#ifdef ENABLE_OPENSSL_FIPS
+	boolean_t filter_ssh_rsa = ssh_FIPS_mode() != 0;
+#endif
 
 	for (i = 0; keyimpls[i] != NULL; i++) {
 		impl = keyimpls[i];
 		if (impl->name == NULL || impl->type == KEY_NULL)
 			continue;
+#ifdef ENABLE_OPENSSL_FIPS
+		if (filter_ssh_rsa && strcmp(impl->name, "ssh-rsa") == 0)
+			continue;
+#endif
 		if (!include_sigonly && impl->sigonly)
 			continue;
 		if ((certs_only && !impl->cert) || (plain_only && impl->cert))
@@ -363,6 +371,55 @@ sshkey_alg_list(int certs_only, int plai
 	return ret;
 }
 
+#ifdef ENABLE_OPENSSL_FIPS
+/*
+ * We have disabled "ssh-rsa" for FIPS but we would not want to make
+ * sure that customers do not immediately need to change their systems
+ * We add rsa-sha2-256 when we specified ssh-rsa.
+ * This function returns 0 when no change is needed, else we return 1
+ * When newp is NULL and we return 1, there was an error.
+ */
+#define OLD_KHA	"ssh-rsa"
+#define NEW_KHA	"rsa-sha2-256"
+int
+sshkey_convert_ssh_rsa(char *names, char **newp)
+{
+	const char *p, *q;
+	size_t len;
+	char *new;
+
+	*newp = NULL;
+
+	if (!ssh_FIPS_mode() || (p = strstr(names, OLD_KHA)) == NULL ||
+	    strstr(names, NEW_KHA) != NULL)
+		return 0;
+
+	/* Check if ssh-rsa is a word by itself. */
+	q = p + sizeof (OLD_KHA) - 1;
+	if (!(p == names || p[-1] == ',' || p[-1] == '+' || p[-1] == '^') ||
+	    !(q[0] == '\0' || q[0] == ',' || q[0] == '*'))
+		return 1;
+
+	/* Add NEW_KHA, sizeof adds data for the "," */
+	len = strlen(names) + 1 + sizeof (NEW_KHA);
+	new = malloc(len);
+
+	if (new == NULL)
+		return 1;
+
+	if (names[0] == '+' || names[0] == '^') {
+		new[0] = names[0];
+		(void) strlcpy(new + 1, NEW_KHA "," , len - 1);
+	} else {
+		(void) strlcpy(new, NEW_KHA "," , len);
+	}
+	(void) strlcat(new, names, len);
+	*newp = new;
+
+	return 1;
+}
+#endif
+
 int
 sshkey_names_valid2(const char *names, int allow_wildcard, int plain_only)
 {
--- old/sshkey.h	2025-10-10 11:53:51.333264950 +0200
+++ new/sshkey.h	2025-10-10 11:53:52.359706855 +0200
@@ -251,6 +251,9 @@ int		 sshkey_ec_validate_private(const E
 const char	*sshkey_ssh_name(const struct sshkey *);
 const char	*sshkey_ssh_name_plain(const struct sshkey *);
 int		 sshkey_names_valid2(const char *, int, int);
+#ifdef ENABLE_OPENSSL_FIPS
+int		 sshkey_convert_ssh_rsa(char *, char **);
+#endif
 char		*sshkey_alg_list(int, int, int, char);
 
 int	 sshkey_from_blob(const u_char *, size_t, struct sshkey **);
