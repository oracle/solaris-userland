The library is built with prefix /usr/openssl/3, but the libraries themselves
are available from /usr too. All consumers should link the libraries from
/usr/lib/... But since we have specified extra prefix, the *.pc files pick it
up and announce to programs linking with openssl. This is a workaround not
suitable for upstream removing the libdir. Better approach would be to user
prefix /usr and copy the libraries to /usr/openssl/3 instead.

--- openssl-3.5.1/exporters/pkg-config/libssl.pc.in
+++ openssl-3.5.1/exporters/pkg-config/libssl.pc.in
@@ -16,7 +16,7 @@ Name: OpenSSL-libssl
 Description: Secure Sockets Layer and cryptography libraries
 Version: {- $OpenSSL::safe::installdata::VERSION -}
 Requires.private: libcrypto
-Libs: -L${libdir} -lssl
+Libs: -lssl
 Cflags:{- $OUT = ' -I${includedir}';
           if (scalar @OpenSSL::safe::installdata::INCLUDEDIR_REL_PREFIX > 1) {
               $OUT = '';
--- openssl-3.5.1/exporters/pkg-config/libcrypto.pc.in
+++ openssl-3.5.1/exporters/pkg-config/libcrypto.pc.in
@@ -17,7 +17,7 @@ modulesdir=${libdir}/{- $OpenSSL::safe::
 Name: OpenSSL-libcrypto
 Description: OpenSSL cryptography library
 Version: {- $OpenSSL::safe::installdata::VERSION -}
-Libs: -L${libdir} -lcrypto
+Libs: -lcrypto
 Libs.private: {- join(' ', @OpenSSL::safe::installdata::LDLIBS) -}
 Cflags:{- $OUT = ' -I${includedir}';
           if (scalar @OpenSSL::safe::installdata::INCLUDEDIR_REL_PREFIX > 1) {
